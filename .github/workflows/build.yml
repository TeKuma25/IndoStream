name: Build

on:
  workflow_dispatch:

concurrency:
  group: "build"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.2
        with:
          path: "src"

      - name: Checkout builds (create if not exists)
        run: |
          git fetch origin
          if git ls-remote --exit-code origin builds; then
            echo "Branch 'builds' exists, checking out..."
            git clone --branch builds https://github.com/${{ github.repository }} builds
          else
            echo "Branch 'builds' does not exist, creating..."
            git clone https://github.com/${{ github.repository }} builds
            cd builds
            git checkout --orphan builds
            git rm -rf .
            echo "# builds branch" > README.md
            git add README.md
            git commit -m "init builds branch"
            git push origin builds
          fi

      - name: Clean old builds
        run: |
          rm -f $GITHUB_WORKSPACE/builds/*.cs3
          rm -f $GITHUB_WORKSPACE/builds/*.jar

      - name: Setup JDK 17
        uses: actions/setup-java@v4.6.0
        with:
          distribution: "temurin"
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3.2.2

      - name: Access Secrets
        run: |
          cd $GITHUB_WORKSPACE/src         
          echo ANIMASU_API=${{ secrets.ANIMASU_API }} >> local.properties
          echo DUBBINDO_API=${{ secrets.DUBBINDO_API }} >> local.properties
          echo GOMOV_API=${{ secrets.GOMOV_API }} >> local.properties
          echo IDLIX_API=${{ secrets.IDLIX_API }} >> local.properties
          echo KURAMANIME_API=${{ secrets.KURAMANIME_API }} >> local.properties
          echo LAYARKACA_API=${{ secrets.LAYARKACA_API }} >> local.properties
          echo NIMEGAMI_API=${{ secrets.NIMEGAMI_API }} >> local.properties
          echo OPLOVERZ_API=${{ secrets.OPLOVERZ_API }} >> local.properties
          echo OTAKUDESU_API=${{ secrets.OTAKUDESU_API }} >> local.properties
          echo PENCURIMOVIE_API=${{ secrets.PENCURIMOVIE_API }} >> local.properties
          echo SAMEHADAKU_API=${{ secrets.SAMEHADAKU_API }} >> local.properties
          echo USEETV_API=${{ secrets.USEETV_API }} >> local.properties

      - name: Build Plugins
        run: |
          cd $GITHUB_WORKSPACE/src
          chmod +x gradlew
          ./gradlew make makePluginsJson
          ./gradlew ensureJarCompatibility
          cp **/build/*.cs3 $GITHUB_WORKSPACE/builds || true
          cp **/build/*.jar $GITHUB_WORKSPACE/builds || true
          cp build/plugins.json $GITHUB_WORKSPACE/builds || true

      - name: Push builds
        run: |
          cd $GITHUB_WORKSPACE/builds
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit --amend -m "Build $GITHUB_SHA" || exit 0
          git push --force origin builds
